{
  "version": "1.0.0",
  "tags": {
    "master": {
      "metadata": {
        "name": "master",
        "description": "Portfolio Futuristico - Task completi con GitHub e Linguaggi",
        "created": "2025-01-27T15:00:00Z",
        "lastModified": "2025-01-27T15:00:00Z"
      },
      "tasks": [
        {
          "id": 1,
          "title": "Setup Progetto React + TypeScript + Tailwind + Vite",
          "description": "Inizializzazione completa del progetto con stack tecnologico moderno",
          "status": "done",
          "priority": "high",
          "dependencies": [],
          "details": "Creare nuovo progetto React con Vite, configurare TypeScript per type safety, installare Tailwind CSS con dark mode e CSS variables per effetti neon. Setup ESLint, Prettier, Git hooks. Configurare path aliases (@/components, @/utils, etc.).",
          "testStrategy": "Verificare build production, type checking, linting, hot reload development",
          "subtasks": [
            {
              "id": "1.1",
              "title": "Inizializzazione Progetto con Vite + React + TS",
              "status": "done",
              "dependencies": []
            },
            {
              "id": "1.2",
              "title": "Installazione e Configurazione Tailwind CSS",
              "status": "done",
              "dependencies": ["1.1"]
            },
            {
              "id": "1.3",
              "title": "Setup ESLint, Prettier e Husky per Code Quality",
              "status": "done",
              "dependencies": ["1.1"]
            },
            {
              "id": "1.4",
              "title": "Configurazione Path Aliases e Struttura Directory",
              "status": "done",
              "dependencies": ["1.1"]
            }
          ]
        },
        {
          "id": 2,
          "title": "Struttura Componenti Base e Layout System",
          "description": "Architettura componenti principali con design system",
          "status": "done",
          "priority": "high",
          "dependencies": [1],
          "details": "Creare Header/Navigation, Hero Section, Footer, Layout wrapper. Implementare design system con tipografia, spacing, colori. Componenti UI base (Button, Card, Section, etc.).",
          "testStrategy": "Testare responsive design, accessibilità, componenti in isolamento"
        },
        {
          "id": 3,
          "title": "Sistema Navigazione Interna e Scroll Smooth",
          "description": "Navigazione fluida tra sezioni con animazioni",
          "status": "done",
          "priority": "medium",
          "dependencies": [2],
          "details": "Implementare scroll-to-section navigation, smooth scrolling, attivazione menu items, scroll spy per evidenziare sezione corrente.",
          "testStrategy": "Testare navigazione da mobile/desktop, performance scroll, accessibility focus"
        },
        {
          "id": 4,
          "title": "Dark Theme e CSS Variables per Effetti Neon",
          "description": "Sistema temi con effetti luminosi futuristici",
          "status": "done",
          "priority": "high",
          "dependencies": [1],
          "details": "CSS custom properties per dark theme, palette colori neon (cyan, purple, green), glow effects, gradients animati, theme switcher opzionale.",
          "testStrategy": "Verificare contrasto WCAG, performance animazioni, compatibilità browser"
        },
        {
          "id": 5,
          "title": "Layout Responsive Mobile-First",
          "description": "Design responsive ottimizzato per tutti i device",
          "status": "done",
          "priority": "high",
          "dependencies": [2],
          "details": "Implementare breakpoints Tailwind, grid responsive, tipografia scalabile, touch-friendly interactions per mobile.",
          "testStrategy": "Testare su device fisici, emulatori, landscape/portrait, diverse risoluzioni"
        },
        {
          "id": 6,
          "title": "Sezione About Me con Informazioni Personali",
          "description": "Presentazione personale completa e professionale",
          "status": "done",
          "priority": "medium",
          "dependencies": [3, 5],
          "details": "Hero section con nome, ruolo, età (21), neolaureato in informatica, location. Bio professionale, call-to-action principali, avatar/foto.",
          "testStrategy": "Review contenuti, A/B test CTA, ottimizzazione conversioni"
        },
        {
          "id": 7,
          "title": "Timeline Carriera Interattiva",
          "description": "Visualizzazione cronologica del percorso formativo/professionale",
          "status": "done",
          "priority": "medium",
          "dependencies": [6],
          "details": "Timeline verticale animata: laurea triennale, tirocini, certificazioni, progetti principali. Punti interattivi con dettagli on-hover.",
          "testStrategy": "Usabilità mobile, leggibilità timeline, animazioni fluide"
        },
        {
          "id": 8,
          "title": "Showcase Linguaggi Programmazione Animato",
          "description": "Visualizzazione interattiva delle competenze di programmazione",
          "status": "done",
          "priority": "high",
          "dependencies": [6],
          "details": "Grid animata per linguaggi: JavaScript/TypeScript, Python, PHP, Java, C#, SQL, HTML/CSS. Icone colorate, livelli competenza, progetti correlati, hover effects.",
          "testStrategy": "Performance animazioni, accessibilità keyboard, mobile touch interactions",
          "subtasks": [
            {
              "id": "8.1",
              "title": "Creare componente per Card Linguaggio",
              "status": "done",
              "dependencies": []
            },
            {
              "id": "8.2",
              "title": "Implementare animazioni di hover con GSAP",
              "status": "done",
              "dependencies": ["8.1"]
            },
            {
              "id": "8.3",
              "title": "Strutturare dati per i linguaggi (JSON o JS object)",
              "status": "done",
              "dependencies": []
            },
            {
              "id": "8.4",
              "title": "Creare la grid responsiva per le card",
              "status": "done",
              "dependencies": ["8.1", "8.3"]
            }
          ]
        },
        {
          "id": 9,
          "title": "Competenze Tecniche con Radar Chart",
          "description": "Overview grafica delle skill tecniche con visualizzazioni avanzate",
          "status": "done",
          "priority": "medium",
          "dependencies": [8],
          "details": "Radar chart per categorie skill, progress bars animate, badge framework/tecnologie, sezione tools & platforms.",
          "testStrategy": "Leggibilità chart, performance rendering, responsive chart scaling"
        },
        {
          "id": 10,
          "title": "Sezione GitHub Dedicata con API Integration",
          "description": "Dashboard GitHub live con statistiche e contributi",
          "status": "done",
          "priority": "high",
          "dependencies": [8],
          "details": "GitHub contribution heatmap, stats live (commits, repos, stars), most used languages, recent activity feed, profilo integration.",
          "testStrategy": "Rate limiting handling, fallback offline, performance API calls, caching strategy",
          "subtasks": [
            {
              "id": "10.1",
              "title": "Setup client API per GitHub (Octokit)",
              "status": "done",
              "dependencies": []
            },
            {
              "id": "10.2",
              "title": "Fetch e visualizzazione Contribution Graph",
              "status": "done",
              "dependencies": ["10.1"]
            },
            {
              "id": "10.3",
              "title": "Componente per statistiche live (commits, stars)",
              "status": "done",
              "dependencies": ["10.1"]
            },
            {
              "id": "10.4",
              "title": "Creare componenti per Pinned Repositories",
              "status": "done",
              "dependencies": ["10.1"]
            },
            {
              "id": "10.5",
              "title": "Implementare caching per le risposte API",
              "status": "done",
              "dependencies": ["10.1"]
            }
          ]
        },
        {
          "id": 11,
          "title": "Sezione Hobby e Interessi Personali",
          "description": "Humanizzazione del profilo con attività personali",
          "status": "done",
          "priority": "low",
          "dependencies": [6],
          "details": "Sport e hobbies: palestra, tennis, ciclismo strada. Micro-animazioni, icone custom, work-life balance messaging.",
          "testStrategy": "Bilanciamento contenuto professionale/personale, engagement metrics"
        },
        {
          "id": 12,
          "title": "Asset Management e Media Optimization",
          "description": "Sistema gestione immagini, documenti e risorse",
          "status": "done",
          "priority": "medium",
          "dependencies": [5],
          "details": "Struttura folder assets, ottimizzazione immagini (WebP, lazy loading), gestione CV/tesi PDF, favicon e meta images.",
          "testStrategy": "Performance loading, SEO images, fallback formati, cache policies"
        },
        {
          "id": 13,
          "title": "Galleria Progetti con Grid Responsivo",
          "description": "Showcase progetti con layout accattivante",
          "status": "done",
          "priority": "high",
          "dependencies": [10, 12],
          "details": "Grid layout per 4 progetti principali: Gestionale calcio (PHP), React PWA, Gestionale ecommerce (Django+React), Galleria iPhone WIP.",
          "testStrategy": "Layout responsivo, hover states, performance grid, accessibility navigation"
        },
        {
          "id": 14,
          "title": "Pagine Dettaglio Progetti con GitHub Stats",
          "description": "Dettagli completi progetti con integrazione repository",
          "status": "done",
          "priority": "high",
          "dependencies": [13],
          "details": "Pagina dedicata per ogni progetto: screenshots, demo live, repository GitHub stats, linguaggi utilizzati, README preview, documentazione tecnica.",
          "testStrategy": "Loading performance, GitHub API reliability, mobile experience dettagli",
          "subtasks": [
            {
              "id": "14.1",
              "title": "Creare template pagina dettaglio progetto",
              "status": "done",
              "dependencies": []
            },
            {
              "id": "14.2",
              "title": "Integrare galleria screenshots/mockups",
              "status": "done",
              "dependencies": ["14.1"]
            },
            {
              "id": "14.3",
              "title": "Fetch e visualizzazione stats repo da GitHub API",
              "status": "done",
              "dependencies": ["14.1", "10.1"]
            },
            {
              "id": "14.4",
              "title": "Componente per rendering README.md del progetto",
              "status": "done",
              "dependencies": ["14.1"]
            }
          ]
        },
        {
          "id": 15,
          "title": "GitHub Repository Stats e Analytics",
          "description": "Statistiche avanzate repository con data visualization",
          "status": "done",
          "priority": "medium",
          "dependencies": [14],
          "details": "Per ogni progetto: commit count, contributors, stars/forks, languages breakdown, recent commits, issues/PRs stats.",
          "testStrategy": "API rate limiting, data accuracy, real-time updates, error handling"
        },
        {
          "id": 16,
          "title": "Sistema Filtri Progetti per Tecnologie",
          "description": "Filtri interattivi per esplorare progetti per stack tech",
          "status": "done",
          "priority": "medium",
          "dependencies": [13],
          "details": "Filtri per linguaggi (React, PHP, Python, Django), categorie (Frontend, Backend, Fullstack), complessità progetto.",
          "testStrategy": "UX filtri, performance filtering, mobile usability, stato URL"
        },
        {
          "id": 17,
          "title": "Demo Live e Link Esterni Progetti",
          "description": "Integrazione demo funzionanti e repository links",
          "status": "done",
          "priority": "medium",
          "dependencies": [14],
          "details": "Link a demo live, mockup interattivi, repository GitHub, documentazione esterna, video demo per progetti complessi.",
          "testStrategy": "Validità link, performance embeds, security external links"
        },
        {
          "id": 18,
          "title": "Setup GSAP per Animazioni Complesse",
          "description": "Libreria animazioni per micro-interactions elaborate",
          "status": "done",
          "priority": "medium",
          "dependencies": [5],
          "details": "Installazione GSAP gratuito, setup timeline animazioni, scroll-triggered animations, performance optimization, reduced motion support.",
          "testStrategy": "Performance 60fps, battery impact mobile, accessibility prefers-reduced-motion"
        },
        {
          "id": 19,
          "title": "Elementi 3D con Three.js per Hero e Accents",
          "description": "Grafica 3D selezionata per impatto visivo",
          "status": "done",
          "priority": "low",
          "dependencies": [18],
          "details": "Elementi 3D subtili nella hero section, accent geometrici, particelle leggere. Ottimizzazione performance, fallback 2D.",
          "testStrategy": "Performance GPU, fallback dispositivi low-end, battery consumption",
          "subtasks": [
            {
              "id": "19.1",
              "title": "Setup scena Three.js di base (camera, renderer)",
              "status": "done"
            },
            {
              "id": "19.2",
              "title": "Creare e animare geometrie 3D semplici",
              "status": "done"
            },
            {
              "id": "19.3",
              "title": "Integrare la scena Three.js nel componente React",
              "status": "done"
            },
            {
              "id": "19.4",
              "title": "Ottimizzare performance e creare fallback 2D",
              "status": "done",
              "dependencies": ["19.2", "19.3"]
            }
          ]
        },
        {
          "id": 20,
          "title": "Animazioni Avanzate con GSAP e ScrollTrigger",
          "description": "Animazioni complesse per storytelling visivo",
          "status": "done",
          "priority": "high",
          "dependencies": [18],
          "details": "Animazioni su sezioni 'About Me', 'Skills' e 'Timeline', parallax effects, scrubbing and pinning, animazioni su testo e SVG. Performance e reduced motion.",
          "testStrategy": "Testare animazioni cross-browser, performance scroll, accessibilità animazioni",
          "subtasks": [
            {
              "id": "20.1",
              "title": "Animare la sezione 'About Me' allo scroll",
              "status": "done"
            },
            {
              "id": "20.2",
              "title": "Creare effetto parallax per sfondi o elementi",
              "status": "done"
            },
            {
              "id": "20.3",
              "title": "Usare pinning e scrubbing per la 'Timeline'",
              "status": "done"
            },
            {
              "id": "20.4",
              "title": "Animare testo e SVG nella sezione 'Skills'",
              "status": "done"
            }
          ]
        },
        {
          "id": 21,
          "title": "Micro-interactions e Hover States",
          "description": "Dettagli interattivi per esperienza premium",
          "status": "done",
          "priority": "medium",
          "dependencies": [18],
          "details": "Hover effects per skill cards, button animations, loading states eleganti, feedback interazioni, cursor personalizzato.",
          "testStrategy": "Touch device compatibility, performance interactions, accessibility focus states"
        },
        {
          "id": 22,
          "title": "Creare un form di contatto funzionale",
          "description": "Form contatti con validazione e invio",
          "status": "pending",
          "priority": "high",
          "dependencies": [21],
          "details": "Form con nome, email, messaggio. Validazione input, feedback visivo per errori/successo, invio a servizio backend (Netlify Forms, Formspree, o similari). Protezione spam (honeypot).",
          "testStrategy": "Testare validazione campi, invio, gestione errori, protezione spam",
          "subtasks": [
            {
              "id": "22.1",
              "title": "Creare il componente React per il form di contatto",
              "status": "done"
            },
            {
              "id": "22.2",
              "title": "Implementare la validazione dei campi con una libreria (es. react-hook-form)",
              "status": "done"
            },
            {
              "id": "22.3",
              "title": "Configurare un servizio di backend per la gestione dell'invio (es. Formspree)",
              "status": "pending"
            },
            {
              "id": "22.4",
              "title": "Gestire lo stato di invio (loading, success, error) e mostrare feedback",
              "status": "done"
            },
            {
              "id": "22.5",
              "title": "Aggiungere un campo honeypot per la protezione anti-spam",
              "status": "done"
            }
          ]
        },
        {
          "id": 23,
          "title": "Loading States e Transizioni Fluide",
          "description": "Feedback visivo per tutte le interazioni async",
          "status": "done",
          "priority": "medium",
          "dependencies": [20],
          "details": "Indicatori di caricamento per chiamate API (GitHub stats, progetti), skeleton loaders, transizioni di pagina con Framer Motion, animazioni entrata/uscita.",
          "testStrategy": "Testare su connessioni lente, robustezza stati UI, performance animazioni"
        },
        {
          "id": 24,
          "title": "Ottimizzazione Bundle e Code Splitting",
          "description": "Performance optimization per caricamento veloce",
          "status": "done",
          "priority": "high",
          "dependencies": [19, 22],
          "details": "React.lazy per componenti, dynamic imports, tree shaking, bundle analysis, chunk optimization.",
          "testStrategy": "Lighthouse performance score 95+, Core Web Vitals, bundle size monitoring"
        },
        {
          "id": 25,
          "title": "Lazy Loading Immagini e Componenti",
          "description": "Caricamento ottimizzato delle risorse",
          "status": "done",
          "priority": "high",
          "dependencies": [23],
          "details": "Intersection Observer per immagini, lazy component loading, progressive image loading, placeholder blur.",
          "testStrategy": "LCP optimization, visual stability, mobile performance"
        },
        {
          "id": 26,
          "title": "SEO Optimization e Meta Tags",
          "description": "Ottimizzazione per motori di ricerca",
          "status": "done",
          "priority": "high",
          "dependencies": [24],
          "details": "React Helmet per meta tags dinamici, structured data JSON-LD, sitemap, robots.txt, Open Graph per social sharing.",
          "testStrategy": "Google Search Console validation, social media preview, structured data testing"
        },
        {
          "id": 27,
          "title": "Core Web Vitals Optimization",
          "description": "Performance metrics Google per ranking",
          "status": "done",
          "priority": "high",
          "dependencies": [25],
          "details": "Ottimizzazione LCP, FID, CLS. Performance monitoring, web vitals tracking, optimization iterative.",
          "testStrategy": "Real user monitoring, field data analysis, performance budget"
        },
        {
          "id": 28,
          "title": "Testing Cross-browser e Mobile",
          "description": "Compatibilità completa su tutti i dispositivi",
          "status": "done",
          "priority": "medium",
          "dependencies": [26],
          "details": "Testing Chrome, Firefox, Safari, Edge. iOS/Android testing, feature detection, polyfills necessari.",
          "testStrategy": "BrowserStack testing, real device testing, regression testing"
        },
        {
          "id": 29,
          "title": "Tesi PDF e CV Download",
          "description": "Documenti scaricabili per validazione competenze",
          "status": "done",
          "priority": "medium",
          "dependencies": [12],
          "details": "Sezione download con tesi triennale PDF, CV aggiornato, preview documenti, tracking download.",
          "testStrategy": "File integrity, download analytics, mobile download UX"
        },
        {
          "id": 30,
          "title": "Contatti e Social Links",
          "description": "Collegamenti professionali e networking",
          "status": "done",
          "priority": "medium",
          "dependencies": [6],
          "details": "Footer/sidebar con social links (GitHub prominente, LinkedIn, email), contact form opzionale, icone animate.",
          "testStrategy": "Link validity, social platform updates, contact form functionality"
        },
        {
          "id": 31,
          "title": "Docker Configuration + Nginx",
          "description": "Containerizzazione per deployment",
          "status": "done",
          "priority": "high",
          "dependencies": [27],
          "details": "Dockerfile multi-stage build, nginx.conf per SPA routing, gzip compression, security headers, SSL ready.",
          "testStrategy": "Container security, build optimization, production performance",
          "subtasks": [
            {
              "id": "30.1",
              "title": "Creare Dockerfile per la build di produzione",
              "status": "done",
              "dependencies": []
            },
            {
              "id": "30.2",
              "title": "Creare Dockerfile per il server Nginx",
              "status": "done",
              "dependencies": []
            },
            {
              "id": "30.3",
              "title": "Configurare Nginx per servire la SPA React",
              "status": "done",
              "dependencies": [
                "30.2"
              ]
            },
            {
              "id": "30.4",
              "title": "Usare Docker Compose per orchestrare i container",
              "status": "done",
              "dependencies": [
                "30.1",
                "30.3"
              ]
            }
          ]
        },
        {
          "id": 32,
          "title": "CI/CD Pipeline con GitHub Actions",
          "description": "Deployment automatico su commit",
          "status": "done",
          "priority": "medium",
          "dependencies": [30],
          "details": "GitHub Actions workflow: build, test, security scan, deploy su server, rollback automatico su fallimento.",
          "testStrategy": "Deployment reliability, rollback procedures, notification systems",
          "subtasks": [
            {
              "id": "31.1",
              "title": "Creare workflow per build e test su ogni push",
              "status": "done",
              "dependencies": []
            },
            {
              "id": "31.2",
              "title": "Aggiungere step per buildare e pushare l'immagine Docker",
              "status": "done",
              "dependencies": [
                "31.1"
              ]
            },
            {
              "id": "31.3",
              "title": "Configurare secrets per l'autenticazione al registry Docker",
              "status": "done",
              "dependencies": [
                "31.2"
              ]
            },
            {
              "id": "31.4",
              "title": "Creare job di deploy che si connette al server via SSH",
              "status": "done",
              "dependencies": [
                "31.3"
              ]
            }
          ]
        },
        {
          "id": 33,
          "title": "Portainer Integration e Documentation",
          "description": "Setup deployment su server personale",
          "status": "pending",
          "priority": "high",
          "dependencies": [31],
          "details": "Configurazione stack Portainer, environment variables, volume management, backup strategy, documentazione deployment.",
          "testStrategy": "Deployment automation, backup/restore procedures, monitoring setup"
        },
        {
          "id": 34,
          "title": "Performance Monitoring e Analytics",
          "description": "Tracking metriche performance e utilizzo",
          "status": "pending",
          "priority": "low",
          "dependencies": [32],
          "details": "Analytics implementazione (privacy-friendly), performance monitoring, error tracking, user behavior insights.",
          "testStrategy": "Privacy compliance, data accuracy, performance impact analytics"
        },
        {
          "id": 35,
          "title": "Security Headers e Best Practices",
          "description": "Sicurezza applicazione web",
          "status": "done",
          "priority": "medium",
          "dependencies": [30],
          "details": "CSP headers, HTTPS enforcement, security.txt, dependency security scanning, vulnerability monitoring.",
          "testStrategy": "Security audit, penetration testing, vulnerability scanning"
        },
        {
          "id": 36,
          "title": "Final Testing e Production Readiness",
          "description": "Verifica finale pre-launch",
          "status": "pending",
          "priority": "high",
          "dependencies": [33, 34],
          "details": "Load testing, security review, performance audit, content review, backup testing, monitoring verification.",
          "testStrategy": "Production deployment checklist, go-live procedures, incident response plan"
        }
      ]
    }
  },
  "global": {
    "currentTag": "master",
    "defaultTag": "master"
  }
} 